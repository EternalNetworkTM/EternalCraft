{"version":3,"sources":["index.js"],"names":["HEADER_IMAGE_OPACITY","HEADER_IMAGE_TRANSLATE_PERCENT","HEADER_IMAGE_SCALE_FACTOR","setupHeaderImageAnimation","header","document","querySelector","headerImage","scrollHandler","headerRect","getBoundingClientRect","percentVisible","Math","max","height","top","style","opacity","translateY","scale","transform","IntersectionObserver","entries","headerImageEntry","isIntersecting","addEventListener","removeEventListener","observe","ruleObjects","setupRules","ruleEntries","children","i","length","rule","body","label","ruleObject","element","icons","querySelectorAll","push","toggleRule","otherRuleObject","otherRule","classList","contains","collapseRule","scrollHeight","toggle","j","remove","window"],"mappings":"AAAA,aAEA,MAAMA,qBAAuB,GACvBC,+BAAiC,GACjCC,0BAA4B,GAElC,SAASC,4BACL,MAAMC,EAASC,SAASC,cAAc,UAChCC,EAAcF,SAASC,cAAc,qBAE3C,SAASE,IACL,MAAMC,EAAaL,EAAOM,wBACpBC,EAAiBC,KAAKC,KAAKJ,EAAWK,OAASL,EAAWM,KAAON,EAAWK,OAAQ,GAC1FP,EAAYS,MAAMC,QAAUjB,qBAAuBW,EACnD,MAAMO,GAAc,EAAIP,GAAkBV,+BACpCkB,EAAQ,GAAK,EAAIR,GAAkBT,0BACzCK,EAAYS,MAAMI,wBAA0BF,aAAsBC,KAGrD,IAAIE,qBAAsBC,IACvC,MAAMC,EAAmBD,EAAQ,GAC7BC,GAAoBA,EAAiBC,eACrCnB,SAASoB,iBAAiB,SAAUjB,GAEpCH,SAASqB,oBAAoB,SAAUlB,KAGtCmB,QAAQvB,GAEjBI,IAGJ,MAAMoB,YAAc,GAEpB,SAASC,aACL,MAAMC,EAAczB,SAASC,cAAc,oBAAoByB,SAE/D,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IAAK,CACzC,MAAME,EAAOJ,EAAYE,GACnBG,EAAOD,EAAK5B,cAAc,SAEhC,IAAK6B,EACD,SAGJ,MAAMC,EAAQF,EAAK5B,cAAc,UAG3B+B,EAAa,CACfC,QAASJ,EACTK,MAJUH,EAAMI,iBAAiB,SAKjCL,KAAMA,GAEVP,YAAYa,KAAKJ,GACjBH,EAAKT,iBAAiB,QAAS,IAAMiB,WAAWL,KAIxD,SAASK,WAAWL,GAChB,IAAK,IAAIL,EAAI,EAAGA,EAAIJ,YAAYK,OAAQD,IAAK,CACzC,MAAMW,EAAkBf,YAAYI,GAC9BY,EAAYD,EAAgBL,QAC9BM,IAAcP,EAAWC,SAAWM,EAAUC,UAAUC,SAAS,aACjEC,aAAaJ,GAIjBN,EAAWC,QAAQO,UAAUC,SAAS,YACtCT,EAAWF,KAAKnB,MAAMF,OAAS,MAE/BuB,EAAWF,KAAKnB,MAAMF,UAAYuB,EAAWF,KAAKa,iBAEtDX,EAAWC,QAAQO,UAAUI,OAAO,YACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAWE,MAAMN,OAAQiB,IACzCb,EAAWE,MAAMW,GAAGL,UAAUI,OAAO,UAI7C,SAASF,aAAaV,GAClBA,EAAWF,KAAKnB,MAAMF,OAAS,MAC/BuB,EAAWC,QAAQO,UAAUM,OAAO,YACpC,IAAK,IAAInB,EAAI,EAAGA,EAAIK,EAAWE,MAAMN,OAAQD,IACzCK,EAAWE,MAAMP,GAAGa,UAAUI,OAAO,UAI7CG,OAAO3B,iBAAiB,OAAQ,KAC5BtB,4BACA0B","sourcesContent":["'use strict';\n\nconst HEADER_IMAGE_OPACITY = 0.4;\nconst HEADER_IMAGE_TRANSLATE_PERCENT = 50;\nconst HEADER_IMAGE_SCALE_FACTOR = 0.2;\n\nfunction setupHeaderImageAnimation() {\n    const header = document.querySelector('header');\n    const headerImage = document.querySelector('.background-image');\n\n    function scrollHandler() {\n        const headerRect = header.getBoundingClientRect();\n        const percentVisible = Math.max((headerRect.height + headerRect.top) / headerRect.height, 0);\n        headerImage.style.opacity = HEADER_IMAGE_OPACITY * percentVisible;\n        const translateY = (1 - percentVisible) * HEADER_IMAGE_TRANSLATE_PERCENT;\n        const scale = 1 + (1 - percentVisible) * HEADER_IMAGE_SCALE_FACTOR;\n        headerImage.style.transform = `translateY(${translateY}%) scale(${scale})`;\n    }\n\n    const observer = new IntersectionObserver((entries) => {\n        const headerImageEntry = entries[0];\n        if (headerImageEntry && headerImageEntry.isIntersecting) {\n            document.addEventListener('scroll', scrollHandler);\n        } else {\n            document.removeEventListener('scroll', scrollHandler);\n        }\n    });\n    observer.observe(header);\n\n    scrollHandler();\n}\n\nconst ruleObjects = [];\n\nfunction setupRules() {\n    const ruleEntries = document.querySelector('.rules-container').children;\n\n    for (let i = 0; i < ruleEntries.length; i++) {\n        const rule = ruleEntries[i];\n        const body = rule.querySelector('.body');\n\n        if (!body) {\n            continue;\n        }\n\n        const label = rule.querySelector('.label');\n        const icons = label.querySelectorAll('.icon');\n\n        const ruleObject = {\n            element: rule,\n            icons: icons,\n            body: body\n        };\n        ruleObjects.push(ruleObject);\n        rule.addEventListener('click', () => toggleRule(ruleObject));\n    }\n}\n\nfunction toggleRule(ruleObject) {\n    for (let i = 0; i < ruleObjects.length; i++) {\n        const otherRuleObject = ruleObjects[i];\n        const otherRule = otherRuleObject.element;\n        if (otherRule !== ruleObject.element && otherRule.classList.contains('expanded')) {\n            collapseRule(otherRuleObject);\n        }\n    }\n\n    if (ruleObject.element.classList.contains('expanded')) {\n        ruleObject.body.style.height = '0px';\n    } else {\n        ruleObject.body.style.height = `${ruleObject.body.scrollHeight}px`;\n    }\n    ruleObject.element.classList.toggle('expanded');\n    for (let j = 0; j < ruleObject.icons.length; j++) {\n        ruleObject.icons[j].classList.toggle('hidden');\n    }\n}\n\nfunction collapseRule(ruleObject) {\n    ruleObject.body.style.height = '0px';\n    ruleObject.element.classList.remove('expanded');\n    for (let i = 0; i < ruleObject.icons.length; i++) {\n        ruleObject.icons[i].classList.toggle('hidden');\n    }\n}\n\nwindow.addEventListener('load', () => {\n    setupHeaderImageAnimation();\n    setupRules();\n});\n"],"file":"index.js"}