{"version":3,"sources":["index.js"],"names":["LOADING_OVERLAY_FADE_DURATION","ANIMATION_CLASSES","HEADER_IMAGE_OPACITY","HEADER_IMAGE_TRANSLATE_PERCENT","HEADER_IMAGE_SCALE_FACTOR","setupAnimations","animationObserver","IntersectionObserver","entries","i","length","entry","isIntersecting","target","classList","remove","unobserve","document","querySelectorAll","forEach","element","observe","setupHeaderImageParallax","header","querySelector","headerImage","scrollHandler","headerRect","getBoundingClientRect","percentVisible","Math","max","height","top","style","opacity","translateY","scale","transform","headerImageEntry","addEventListener","removeEventListener","ruleObjects","setupRules","ruleEntries","children","rule","body","label","ruleObject","icons","push","toggleRule","otherRuleObject","otherRule","contains","collapseRule","scrollHeight","toggle","j","doneLoading","documentElement","loadingOverlay","animation","animate","duration","easing","fill","onAnimationEnd","add","window"],"mappings":"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","sourcesContent":["'use strict';\n\nconst LOADING_OVERLAY_FADE_DURATION = 250;\n\nconst ANIMATION_CLASSES = ['animation-fade-in', 'animation-slide-down', 'animation-zoom-out'];\n\nconst HEADER_IMAGE_OPACITY = 0.4;\nconst HEADER_IMAGE_TRANSLATE_PERCENT = 50;\nconst HEADER_IMAGE_SCALE_FACTOR = 0.2;\n\nfunction setupAnimations() {\n    const animationObserver = new IntersectionObserver((entries) => {\n        for (let i = 0; i < entries.length; i++) {\n            const entry = entries[i];\n            if (entry.isIntersecting) {\n                entry.target.classList.remove(...ANIMATION_CLASSES);\n                animationObserver.unobserve(entry.target);\n            }\n        }\n    });\n    const animatedElements = document.querySelectorAll('.animation');\n    animatedElements.forEach((element) => animationObserver.observe(element));\n}\n\nfunction setupHeaderImageParallax() {\n    const header = document.querySelector('header');\n    const headerImage = document.querySelector('.background-image');\n\n    function scrollHandler() {\n        const headerRect = header.getBoundingClientRect();\n        const percentVisible = Math.max((headerRect.height + headerRect.top) / headerRect.height, 0);\n        headerImage.style.opacity = HEADER_IMAGE_OPACITY * percentVisible;\n        const translateY = (1 - percentVisible) * HEADER_IMAGE_TRANSLATE_PERCENT;\n        const scale = 1 + (1 - percentVisible) * HEADER_IMAGE_SCALE_FACTOR;\n        headerImage.style.transform = `translateY(${translateY}%) scale(${scale})`;\n    }\n\n    const headerObserver = new IntersectionObserver((entries) => {\n        const headerImageEntry = entries[0];\n        if (headerImageEntry && headerImageEntry.isIntersecting) {\n            document.addEventListener('scroll', scrollHandler);\n        } else {\n            document.removeEventListener('scroll', scrollHandler);\n        }\n    });\n    headerObserver.observe(header);\n\n    scrollHandler();\n}\n\nconst ruleObjects = [];\n\nfunction setupRules() {\n    const ruleEntries = document.querySelector('.rules-container').children;\n\n    for (let i = 0; i < ruleEntries.length; i++) {\n        const rule = ruleEntries[i];\n        const body = rule.querySelector('.body');\n\n        if (!body) {\n            continue;\n        }\n\n        const label = rule.querySelector('.label');\n        const icons = label.querySelectorAll('.icon');\n\n        const ruleObject = {\n            element: rule,\n            icons: icons,\n            body: body\n        };\n        ruleObjects.push(ruleObject);\n        rule.addEventListener('click', () => toggleRule(ruleObject));\n    }\n}\n\nfunction toggleRule(ruleObject) {\n    for (let i = 0; i < ruleObjects.length; i++) {\n        const otherRuleObject = ruleObjects[i];\n        const otherRule = otherRuleObject.element;\n        if (otherRule !== ruleObject.element && otherRule.classList.contains('expanded')) {\n            collapseRule(otherRuleObject);\n        }\n    }\n\n    if (ruleObject.element.classList.contains('expanded')) {\n        ruleObject.body.style.height = '0px';\n    } else {\n        ruleObject.body.style.height = `${ruleObject.body.scrollHeight}px`;\n    }\n    ruleObject.element.classList.toggle('expanded');\n    for (let j = 0; j < ruleObject.icons.length; j++) {\n        ruleObject.icons[j].classList.toggle('hidden');\n    }\n}\n\nfunction collapseRule(ruleObject) {\n    ruleObject.body.style.height = '0px';\n    ruleObject.element.classList.remove('expanded');\n    for (let i = 0; i < ruleObject.icons.length; i++) {\n        ruleObject.icons[i].classList.toggle('hidden');\n    }\n}\n\nfunction doneLoading() {\n    document.documentElement.classList.remove('loading');\n\n    const loadingOverlay = document.querySelector('.loading-overlay');\n    const animation = loadingOverlay.animate(\n        [{ opacity: 1 }, { opacity: 0 }],\n        {\n            duration: LOADING_OVERLAY_FADE_DURATION,\n            easing: 'ease',\n            fill: 'forwards'\n        }\n    );\n\n    function onAnimationEnd() {\n        loadingOverlay.classList.add('hidden');\n    }\n\n    animation.addEventListener('finish', onAnimationEnd);\n    animation.addEventListener('cancel', onAnimationEnd);\n}\n\nwindow.addEventListener('load', () => {\n    setupAnimations();\n    setupHeaderImageParallax();\n    setupRules();\n    doneLoading();\n});\n"],"file":"index.js"}